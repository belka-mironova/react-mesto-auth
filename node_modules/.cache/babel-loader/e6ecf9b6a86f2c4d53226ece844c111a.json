{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = res => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(checkResponse);\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(checkResponse);\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","checkToken","token","Authorization"],"sources":["/Users/belka/Desktop/yandexPr/react-mesto-auth/src/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = (res) => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  }).then(checkResponse);\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  }).then(checkResponse);\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(checkResponse);\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,MAAMC,aAAa,GAAIC,GAAD,IAAS;EAC7B,OAAOA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAA7B;AACD,CAFD;;AAIA,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;EAC3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IACjCY,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBP,QAAQ,EAAEA,QADS;MAEnBC,KAAK,EAAEA;IAFY,CAAf;EAL2B,CAAvB,CAAL,CASJO,IATI,CASChB,aATD,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMiB,SAAS,GAAG,CAACR,KAAD,EAAQD,QAAR,KAAqB;EAC5C,OAAOE,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IACjCY,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBN,KAAK,EAAEA,KADY;MAEnBD,QAAQ,EAAEA;IAFS,CAAf;EAL2B,CAAvB,CAAL,CASJQ,IATI,CASChB,aATD,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMkB,UAAU,GAAIC,KAAD,IAAW;EACnC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAb,EAAyB;IACnCY,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPQ,aAAa,EAAG,UAASD,KAAM;IAFxB;EAF0B,CAAzB,CAAL,CAMJH,IANI,CAMChB,aAND,CAAP;AAOD,CARM"},"metadata":{},"sourceType":"module"}