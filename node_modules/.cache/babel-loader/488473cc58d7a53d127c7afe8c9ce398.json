{"ast":null,"code":"import _classCallCheck from \"/Users/belka/Desktop/yandexPr/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/belka/Desktop/yandexPr/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Api = /*#__PURE__*/function () {\n  function Api(config) {\n    _classCallCheck(this, Api);\n\n    this._baseUrl = config.url;\n    this._headers = config.headers;\n  } //приватная функция проверки ответа\n\n\n  _createClass(Api, [{\n    key: \"_checkResponse\",\n    value: function _checkResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(\"Error: \".concat(res.status));\n    } //получить карточки с сервера (GET)\n\n  }, {\n    key: \"getInitialCards\",\n    value: function getInitialCards() {\n      return fetch(this._baseUrl + \"/cards\", {\n        method: \"GET\",\n        headers: this._headers\n      }).then(this._checkResponse);\n    } //добавить карточку (POST)\n\n  }, {\n    key: \"postCard\",\n    value: function postCard(data) {\n      return fetch(this._baseUrl + \"/cards\", {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.name,\n          link: data.link\n        })\n      }).then(this._checkResponse);\n    } //удалить карточку (DELETE)\n\n  }, {\n    key: \"deleteCard\",\n    value: function deleteCard(id) {\n      return fetch(\"\".concat(this._baseUrl, \"/cards/\").concat(id), {\n        method: \"DELETE\",\n        headers: this._headers\n      }).then(this._checkResponse);\n    } //получить данные пользователя (GET)\n\n  }, {\n    key: \"getUserData\",\n    value: function getUserData() {\n      return fetch(this._baseUrl + \"/users/me\", {\n        method: \"GET\",\n        headers: this._headers\n      }).then(this._checkResponse);\n    } //заменить данные пользователя (PATCH)\n\n  }, {\n    key: \"setUserData\",\n    value: function setUserData(data) {\n      return fetch(this._baseUrl + \"/users/me\", {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.name,\n          about: data.about\n        })\n      }).then(this._checkResponse);\n    } //заменить аватар (PATCH)\n\n  }, {\n    key: \"setNewAvatar\",\n    value: function setNewAvatar(data) {\n      return fetch(this._baseUrl + \"/users/me/avatar\", {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: data.avatar\n        })\n      }).then(this._checkResponse);\n    } //“залайкать” карточку (PUT)\n\n  }, {\n    key: \"setLikeCard\",\n    value: function setLikeCard(id) {\n      return fetch(this._baseUrl + \"/cards/likes/\".concat(id), {\n        method: \"PUT\",\n        headers: this._headers\n      }).then(this._checkResponse);\n    } //удалить лайк карточки (DELETE)\n\n  }, {\n    key: \"deleteLikeCard\",\n    value: function deleteLikeCard(id) {\n      return fetch(this._baseUrl + \"/cards/likes/\".concat(id), {\n        method: \"DELETE\",\n        headers: this._headers\n      }).then(this._checkResponse);\n    }\n  }]);\n\n  return Api;\n}();\n\nvar api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-41\",\n  headers: {\n    authorization: \"bebc4145-001f-487f-8afd-8c22bbd3883b\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","config","_baseUrl","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","data","body","JSON","stringify","name","link","id","about","avatar","api","authorization"],"sources":["/Users/belka/Desktop/yandexPr/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(config) {\n    this._baseUrl = config.url;\n    this._headers = config.headers;\n  }\n\n  //приватная функция проверки ответа\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  //получить карточки с сервера (GET)\n  getInitialCards() {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  //добавить карточку (POST)\n  postCard(data) {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ name: data.name, link: data.link }),\n    }).then(this._checkResponse);\n  }\n\n  //удалить карточку (DELETE)\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  //получить данные пользователя (GET)\n  getUserData() {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  //заменить данные пользователя (PATCH)\n  setUserData(data) {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  //заменить аватар (PATCH)\n  setNewAvatar(data) {\n    return fetch(this._baseUrl + `/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  //“залайкать” карточку (PUT)\n  setLikeCard(id) {\n    return fetch(this._baseUrl + `/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  //удалить лайк карточки (DELETE)\n  deleteLikeCard(id) {\n    return fetch(this._baseUrl + `/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-41\",\n  headers: {\n    authorization: \"bebc4145-001f-487f-8afd-8c22bbd3883b\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}