{"ast":null,"code":"export var BASE_URL = 'https://auth.nomoreparties.co';\n\nvar checkResponse = function checkResponse(res) {\n  return res.ok ? res.json() : Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n};\n\nexport var register = function register(password, email) {\n  return fetch(\"\".concat(BASE_URL, \"/signup\"), {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(checkResponse);\n};\nexport var authorize = function authorize(email, password) {\n  return fetch(\"\".concat(BASE_URL, \"/signin\"), {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(checkResponse);\n};\nexport var checkToken = function checkToken(token) {\n  return fetch(\"\".concat(BASE_URL, \"/users/me\"), {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(checkResponse);\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","checkToken","token","Authorization"],"sources":["/Users/belka/Desktop/yandexPr/react-mesto-auth/src/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = (res) => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    }),\n  }).then(checkResponse);\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  }).then(checkResponse);\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(checkResponse);\n};\n"],"mappings":"AAAA,OAAO,IAAMA,QAAQ,GAAG,+BAAjB;;AAEP,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;EAC7B,OAAOA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,iDAA0BJ,GAAG,CAACK,MAA9B,EAA7B;AACD,CAFD;;AAIA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAWC,KAAX,EAAqB;EAC3C,OAAOC,KAAK,WAAIX,QAAJ,cAAuB;IACjCY,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBP,QAAQ,EAAEA,QADS;MAEnBC,KAAK,EAAEA;IAFY,CAAf;EAL2B,CAAvB,CAAL,CASJO,IATI,CASChB,aATD,CAAP;AAUD,CAXM;AAaP,OAAO,IAAMiB,SAAS,GAAG,SAAZA,SAAY,CAACR,KAAD,EAAQD,QAAR,EAAqB;EAC5C,OAAOE,KAAK,WAAIX,QAAJ,cAAuB;IACjCY,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBN,KAAK,EAAEA,KADY;MAEnBD,QAAQ,EAAEA;IAFS,CAAf;EAL2B,CAAvB,CAAL,CASJQ,IATI,CASChB,aATD,CAAP;AAUD,CAXM;AAaP,OAAO,IAAMkB,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;EACnC,OAAOT,KAAK,WAAIX,QAAJ,gBAAyB;IACnCY,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPQ,aAAa,mBAAYD,KAAZ;IAFN;EAF0B,CAAzB,CAAL,CAMJH,IANI,CAMChB,aAND,CAAP;AAOD,CARM"},"metadata":{},"sourceType":"module"}